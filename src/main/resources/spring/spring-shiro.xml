<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- web.xml中context-param执行顺序在servlet之前,cache与utils需在redisCacheManager前加载 -->
    <context:component-scan base-package="com.bird.business.cache" />
    <context:component-scan base-package="com.bird.business.utils" />

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--登录页url,没权限的请求跳转至登录页-->
        <property name="loginUrl" value="login.jsp"/>
        <!--未认证跳转页面-->
        <!--<property name="unauthorizedUrl" value="403.html"/>-->
        <!--过滤器链-->
        <property name="filterChainDefinitions">
            <value>
                <!--静态资源免认证(页面除外)-->
                /css/**=anon
                /images/**=anon
                /js/**=anon
                /common/**=anon
                <!--登录页不需要任何认证-->
                /login.jsp = anon
                /login = anon
                /loginOut = anon
                <!--忘记密码页不需要认证-->
                /pages/forgetpwd.jsp = anon
                <!--重设密码获取邮箱验证码不需要认证-->
                /getForgotPwdCode = anon
                <!--重设密码不需要认证-->
                /resetPwd = anon
                <!--获取验证码不需要认证-->
                /vcode = anon
                <!--authc是认证过，user是登录过，如果开启了Readmemberme功能的话，后者也是可以通过的，而前者通过不了-->
                <!--/** = authc-->
                /** = user
            </value>
        </property>
    </bean>

    <!--创建SecurityManager-->
    <bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" id="securityManager">
        <!--注入realm-->
        <property name="realm" ref="realm"/>
        <!--注入sessionManager-->
        <property name="sessionManager" ref="redisSessionManager" />
        <!--注入cacheManager-->
        <property name="cacheManager" ref="redisCacheManager"/>
        <!--注入cookieRememberManager-->
        <property name="rememberMeManager" ref="cookieRememberMeManager" />
    </bean>

    <!-- 自定义realm -->
    <bean class="com.bird.business.realm.CustomRealm" id="realm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!--在自定义的SessionManager中引入自定义的sessionDAO-->
    <bean class="com.bird.business.session.CustomSessionManager" id="redisSessionManager">
        <property name="sessionDAO" ref="redisSessionDao"/>
    </bean>
    <bean class="com.bird.business.session.RedisSessionDao" id="redisSessionDao"/>

    <!--增加角色/权限的缓存,自动缓存自定义realm中的认证信息(包含角色/权限),授权没必要缓存-->
    <bean class="com.bird.business.cache.RedisCacheManager" id="redisCacheManager"/>

    <!--注入加密bean-->
    <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher" id="credentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1" />
    </bean>

    <!--加入cookie-->
    <bean class="org.apache.shiro.web.mgt.CookieRememberMeManager" id="cookieRememberMeManager">
        <property name="cookie" ref="cookie"/>
    </bean>
    <bean class="org.apache.shiro.web.servlet.SimpleCookie" id="cookie">
        <!--cookie名称-->
        <constructor-arg value="rememberMe" />
        <!--cookie存活时间,单位s-->
        <property name="maxAge" value="60000" />
    </bean>
</beans>